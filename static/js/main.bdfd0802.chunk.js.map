{"version":3,"sources":["components/Articles.js","App.js","reportWebVitals.js","index.js"],"names":["Articles","useState","num","setNum","data","setData","useEffect","a","axios","result","fetchData","value","onChange","event","target","id","map","articles","index","style","listStyle","href","url","title","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAmDeA,EA/CE,WAAO,IAAD,EACGC,qBADH,mBACZC,EADY,KACPC,EADO,OAEKF,mBAAS,CAAEG,KAAM,KAFtB,mBAEZA,EAFY,KAENC,EAFM,KAcvB,OAVIC,qBAAU,YACK,uCAAG,4BAAAC,EAAA,sEACKC,IAAM,qDAAD,OAC6BN,IAFvC,OACVO,EADU,OAIhBJ,EAAQI,EAAOL,MAJC,2CAAH,qDAMfM,KACC,CAACR,IAGF,mCACA,gCACA,mDAAqB,qCAAQA,KAA7B,gBACA,gCAAK,oDAA2B,yBAAQS,MAAOT,EAAKU,SAAU,SAACC,GAC3DV,EAAOU,EAAMC,OAAOH,QADQ,UAIhC,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,qBAIC,qBAAKI,GAAK,YAAV,SAEC,6BACGX,EAAKA,KAAKY,KAAI,SAACC,EAAUC,GAAX,OACb,oBAAgBC,MAAO,CAAEC,UAAW,QAApC,SACM,mBAAGC,KAAMJ,EAASK,IAAKR,OAAO,eAA9B,SACE,6BAAKG,EAASM,WAFbL,gBC1BJM,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bdfd0802.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Articles = () => {\r\n    const [num, setNum] = useState();\r\n    const [data, setData] = useState({ data: [] });\r\n\r\n    useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(\r\n        `https://jsonmock.hackerrank.com/api/articles?page=${num}`\r\n      );\r\n      setData(result.data);\r\n    };\r\n    fetchData();\r\n  }, [num]);\r\n\r\nreturn (\r\n    <>\r\n    <div>\r\n    <h1> Hacker Rank page<span> {num}</span> Articles.</h1>\r\n    <div><h2> Choose Page No : </h2><select value={num} onChange={(event)=> {\r\n        setNum(event.target.value);\r\n    }}\r\n    >\r\n    <option value=\"1\">1</option>\r\n    <option value=\"2\">2</option>\r\n    <option value=\"3\">3</option>\r\n    <option value=\"4\">4</option>\r\n    <option value=\"5\">5</option>\r\n    </select>\r\n</div>\r\n\r\n     <div id = \"container\">\r\n     \r\n      <ul>\r\n        {data.data.map((articles, index) => (\r\n          <li key={index} style={{ listStyle: 'none' }}>\r\n                <a href={articles.url} target=\"target_blank\">\r\n                  <h3>{articles.title}</h3>\r\n                </a>\r\n            \r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n    </div>\r\n    </>\r\n);\r\n};\r\nexport default Articles;","import React from 'react';\nimport './App.css';\nimport Articles from './components/Articles';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Articles />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}