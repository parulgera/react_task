{"version":3,"sources":["components/Articles.js","App.js","reportWebVitals.js","index.js"],"names":["Articles","useState","num","setNum","data","setData","totalPages","setTotalPages","fetchData","a","axios","result","total_pages","useEffect","value","onChange","event","target","Array","map","_","index","id","articles","style","listStyle","href","url","rel","title","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAsDeA,EAlDE,WAAO,IAAD,EACGC,mBAAS,GADZ,mBACZC,EADY,KACPC,EADO,OAEKF,mBAAS,IAFd,mBAEZG,EAFY,KAENC,EAFM,OAGgBJ,qBAHhB,mBAGZK,EAHY,KAGAC,EAHA,KAIbC,EAAS,uCAAG,4BAAAC,EAAA,sEACKC,IAAM,qDAAD,OAC6BR,IAFvC,OACVS,EADU,OAIhBN,EAAQM,EAAOP,KAAKA,MACpBG,EAAcI,EAAOP,KAAKQ,aALV,2CAAH,qDAanB,OALIC,qBAAU,WAEVL,MACC,CAACN,IAGF,mCACA,gCACE,mDAAqB,qCAAQA,KAA7B,gBACA,gCACE,oDAA2B,wBAAQY,MAAOZ,EAAKa,SAAU,SAACC,GAC1Db,EAAOa,EAAMC,OAAOH,QADO,SAI9B,YAAI,IAAII,MAAMZ,IAAaa,KAAI,SAACC,EAAGC,GAAJ,OAC7B,wBAAQP,MAAOO,EAAM,EAArB,SAAyBA,EAAM,YAMjC,qBAAKC,GAAK,YAAV,SAEC,6BACGlB,EAAKe,KAAI,SAACI,EAAUF,GAAX,OACR,oBAAgBG,MAAO,CAAEC,UAAW,QAApC,SACM,mBAAGC,KAAMH,EAASI,IAAKV,OAAO,SAASW,IAAI,aAA3C,SACE,6BAAKL,EAASM,WAFbR,gBC7BJS,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.462def67.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Articles = () => {\r\n    const [num, setNum] = useState(1);\r\n    const [data, setData] = useState([]);\r\n    const [totalPages, setTotalPages]= useState();\r\n    const fetchData = async () => {\r\n      const result = await axios(\r\n        `https://jsonmock.hackerrank.com/api/articles?page=${num}`\r\n      );\r\n      setData(result.data.data);\r\n      setTotalPages(result.data.total_pages);\r\n    };\r\n\r\n    useEffect(() => {\r\n    \r\n    fetchData();\r\n  }, [num]);\r\n\r\nreturn (\r\n    <>\r\n    <div>\r\n      <h1> Hacker Rank page<span> {num}</span> Articles.</h1>\r\n      <div>\r\n        <h2> Choose Page No : </h2><select value={num} onChange={(event)=> {\r\n        setNum(event.target.value);\r\n    }}\r\n    > \r\n    {[...new Array(totalPages)].map((_, index) => \r\n       <option value={index+1}>{index+1}</option>\r\n)}\r\n    \r\n    </select>\r\n</div>\r\n\r\n     <div id = \"container\">\r\n     \r\n      <ul>\r\n        {data.map((articles, index) => (\r\n          <li key={index} style={{ listStyle: 'none' }}>\r\n                <a href={articles.url} target=\"_blank\" rel=\"noreferrer\">\r\n                  <h3>{articles.title}</h3>\r\n                </a>\r\n            \r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n    </div>\r\n    </>\r\n);\r\n};\r\nexport default Articles;\r\n","import React from 'react';\nimport './App.css';\nimport Articles from './components/Articles';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Articles />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}